{"name":"Mandlebrot zoomer","filename":"1428604299149.js","author":"Ben","code":"function Mandeliter( cx, cy, maxiter ){\r\n  var\r\n    x = 0.0,\r\n    y = 0.0,\r\n    xx = 0,\r\n    yy = 0,\r\n    xy = 0;\r\n \r\n  var i = maxiter;\r\n  while( i-- && xx + yy <= 4 ){\r\n    xy = x * y;\r\n    xx = x * x;\r\n    yy = y * y;\r\n    x = xx - yy + cx;\r\n    y = xy + xy + cy;\r\n  }\r\n  return maxiter - i;\r\n}\r\n \r\nfunction Mandelbrot( display, xmin,xmax, ymin,ymax, iterations ){\r\n  var width = display.cols, height = display.rows;\r\n  \r\n  for( var ix = 0; ix < width; ++ix )\r\n    for( var iy = 0; iy < height; ++iy )\r\n    {\r\n      var x = xmin + (xmax - xmin) * ix / (width - 1);\r\n      var y = ymin + (ymax - ymin) * iy / (height - 1);\r\n      var i = Mandeliter( x, y, iterations );\r\n      var ppos = (width * iy + ix);\r\n      if( i === iterations )\r\n      {\r\n        display.leds[ppos] = new Color(0);\r\n      }\r\n      else\r\n      {\r\n        /*var c =  Math.log(i)/Math.log(iterations - 1.0);\r\n        // c is in range 0 to 1\r\n        // want mostly red, with brighter reds as c increases\r\n        var col = new Color();\r\n        col.setRGB(c, 0,0);\r\n        display.leds[ppos] = col;*/\r\n        \r\n        /*var c = 0 + Math.log(Math.log(Math.abs(i)))/Math.log(2);\r\n        var col = new Color();\r\n        col.setHSL(0.75 + (0.95 + c)%1, 1, 0.5);\r\n        display.leds[ppos] = col;*/\r\n        \r\n        var c =  3*Math.log(i)/Math.log(iterations - 1.0);\r\n        if (c < 1)\r\n        {\r\n            var col = new Color();\r\n            col.setRGB(c, 0,0);\r\n            display.leds[ppos] = col;\r\n        }\r\n        else if( c < 2 )\r\n        {\r\n            var col = new Color();\r\n            col.setRGB(1, (c-1), 0);\r\n            display.leds[ppos] = col;\r\n        }\r\n        else\r\n        {\r\n            var col = new Color();\r\n            col.setRGB(0.5, 1*(c-2), c-2);\r\n            display.leds[ppos] = col;\r\n        }\r\n      }\r\n      //pix[ ppos+3 ] = 255;\r\n    }\r\n}\r\n // example code, renders a basic rainbow\r\nvar tweenedValues = {\r\n\thue: 0,\r\n\txmin: -2, //xmin: -2,\r\n\txmax: 1, //xmax: 1\r\n\tymin: -1,\r\n\tymax: 1,/*\r\n\txmin:-1.6194893102830346,\r\n\tymin:-0.7911970621472677,\r\n\txmax:0.07785467761613862,\r\n\tymax:0.07757265394106039*/\r\n};\r\n\r\nreturn {\r\n\tinit: function(display,timeline) {\r\n\t\tthis.display = display;\r\n\t\t\r\n\t\tvar destinations = [\r\n\t\t    {\r\n\t\t        xmin:0.3222219256898535,\r\n                ymin:-0.5125323520652835,\r\n                xmax:0.32233253282941526,\r\n                ymax:-0.512473119501309\r\n\t\t    },\r\n\t\t    {\r\n\t\t        xmin:-0.15284699197494708,\r\n                ymin:1.039694999089301,\r\n                xmax:-0.15284637168697432,\r\n                ymax:1.0396953312671982\r\n\t\t    },\r\n\t\t    {\r\n\t\t        xmin:-0.7824672913071709,\r\n                ymin:-0.1257914356288737,\r\n                xmax:-0.7777378287713843,\r\n                ymax:-0.12337070426636942\r\n\t\t    }\r\n\t\t];\r\n\t\tvar randDest = Math.round(Math.random()*(destinations.length-1));\r\n\t//\tdebugger;\r\n      \tdisplay.tween(tweenedValues,{\r\n            to: destinations[randDest],\r\n            duration: 15000,\r\n            repeat: Infinity,\r\n            yoyo: true,\r\n            delay: 0,\r\n            easing: TWEEN.Easing.Quintic.InOut\r\n        });\r\n        \r\n\t},\r\n\tonUpdate: function(display, data) {\r\n        Mandelbrot( display, tweenedValues.xmin,tweenedValues.xmax, tweenedValues.ymin,tweenedValues.ymax, 500 );\r\n\t}\r\n};","publish":true,"script":{}}