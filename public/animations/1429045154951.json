{"name":"Two spinny cubes","filename":"1429045154951.js","author":"Ben","code":"\r\nvar scale=400;\r\n\r\nvar SceneObject = function(name, lines, pos, color) {\r\n    this.lines = lines;\r\n    this.name = name;\r\n    this.pos = pos;\r\n    this.color = color;\r\n    this.rotation = new THREE.Euler(0,0,0);\r\n    this.matrix = new THREE.Matrix3();\r\n    this.quaternion = new THREE.Quaternion();\r\n    this.quaternion.setFromAxisAngle(new THREE.Vector3(0,1,0), Math.PI/2);\r\n};\r\nSceneObject.prototype = {\r\n    getOrigin: function() {\r\n        return this.pos;\r\n    },\r\n    setOrigin: function(x, y, z) {\r\n        this.pos.set(x,y,z);\r\n    },\r\n    update: function() {\r\n        this.quaternion.setFromEuler(this.rotation);\r\n    },\r\n    draw: function(display) {\r\n        var origin = this.getOrigin();\r\n        \r\n        for (var l in this.lines) {\r\n            //var v0 = this.lines[l].start.applyMatrix3(this.matrix);\r\n            \r\n            //var v1 = this.lines[l].end.applyMatrix3(this.matrix);\r\n            var v0 = this.lines[l].start.clone().applyQuaternion(this.quaternion);\r\n            var v1 = this.lines[l].end.clone().applyQuaternion(this.quaternion);\r\n            \r\n            var x0=(v0.x+origin.x) * scale/(v0.z+origin.z);\r\n            var y0=(v0.y+origin.y) * scale/(v0.z+origin.z);\r\n            var x1=(v1.x+origin.x) * scale/(v1.z+origin.z);\r\n            var y1=(v1.y+origin.y) * scale/(v1.z+origin.z);\r\n            \r\n            display.drawLine(\r\n                x0+7.5,\r\n                y0+7.5,\r\n                x1+7.5, \r\n                y1+7.5,\r\n                this.color\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nvar objlist = [];\r\nobjlist.push(\r\n    new SceneObject(\"cube\",\r\n        [\r\n            new THREE.Line3(new THREE.Vector3(10, 10, 10), new THREE.Vector3(-10, 10, 10)),\r\n            new THREE.Line3(new THREE.Vector3(10, 10, 10), new THREE.Vector3( 10, -10, 10)),\r\n            new THREE.Line3(new THREE.Vector3(10, 10, 10), new THREE.Vector3( 10, 10, -10)),\r\n            new THREE.Line3(new THREE.Vector3(-10, -10, -10), new THREE.Vector3( 10, -10, -10)),\r\n            new THREE.Line3(new THREE.Vector3(-10, -10, -10), new THREE.Vector3( -10, 10, -10)),\r\n            new THREE.Line3(new THREE.Vector3(-10, -10, -10), new THREE.Vector3( -10, -10, 10)),\r\n            new THREE.Line3(new THREE.Vector3(10, 10, -10), new THREE.Vector3( 10, -10, -10)),\r\n            new THREE.Line3(new THREE.Vector3(10, 10, -10), new THREE.Vector3( -10, 10, -10)),\r\n            new THREE.Line3(new THREE.Vector3(-10, -10, 10), new THREE.Vector3( 10, -10, 10)),\r\n            new THREE.Line3(new THREE.Vector3(-10, -10, 10), new THREE.Vector3( -10, 10, 10)),\r\n            new THREE.Line3(new THREE.Vector3(-10, 10, 10), new THREE.Vector3( -10, 10, -10)),\r\n            new THREE.Line3(new THREE.Vector3(10, -10, 10), new THREE.Vector3( 10, -10, -10))\r\n        ],\r\n        new THREE.Vector3(52/3, 9, 400),\r\n        new Color().setRGB(0,1,0)\r\n    ),\r\n    new SceneObject(\"innercube\",\r\n        [\r\n            new THREE.Line3(new THREE.Vector3(5, 5, 5), new THREE.Vector3(-5, 5, 5)),\r\n            new THREE.Line3(new THREE.Vector3(5, 5, 5), new THREE.Vector3( 5, -5, 5)),\r\n            new THREE.Line3(new THREE.Vector3(5, 5, 5), new THREE.Vector3( 5, 5, -5)),\r\n            new THREE.Line3(new THREE.Vector3(-5, -5, -5), new THREE.Vector3( 5, -5, -5)),\r\n            new THREE.Line3(new THREE.Vector3(-5, -5, -5), new THREE.Vector3( -5, 5, -5)),\r\n            new THREE.Line3(new THREE.Vector3(-5, -5, -5), new THREE.Vector3( -5, -5, 5)),\r\n            new THREE.Line3(new THREE.Vector3(5, 5, -5), new THREE.Vector3( 5, -5, -5)),\r\n            new THREE.Line3(new THREE.Vector3(5, 5, -5), new THREE.Vector3( -5, 5, -5)),\r\n            new THREE.Line3(new THREE.Vector3(-5, -5, 5), new THREE.Vector3( 5, -5, 5)),\r\n            new THREE.Line3(new THREE.Vector3(-5, -5, 5), new THREE.Vector3( -5, 5, 5)),\r\n            new THREE.Line3(new THREE.Vector3(-5, 5, 5), new THREE.Vector3( -5, 5, -5)),\r\n            new THREE.Line3(new THREE.Vector3(5, -5, 5), new THREE.Vector3( 5, -5, -5))\r\n        ],\r\n        new THREE.Vector3(52/3, 9, 400),\r\n        new Color().setRGB(1,0,0)\r\n    )\r\n);\r\n\r\n\r\n// example code, renders a basic rainbow\r\nvar tweenedValues = {\r\n\tpercent: 0,\r\n\tangleX: 0,\r\n\tangleY: 0,\r\n\tangleZ: 0,\r\n};\r\nreturn {\r\n\tinit: function(display,timeline) {\r\n\t\tthis.display = display;\r\n\t\t\r\n//debugger;\r\n        \r\n        /*var t = display.tween(tweenedValues,{\r\n            to: {percent: 1},\r\n            duration: 1000,\r\n            repeat: Infinity,\r\n            yoyo: true,\r\n            delay: 0,\r\n            easing: TWEEN.Easing.Cubic.InOut\r\n        });*/\r\n        display.clear(new Color(0x00));\r\n        var t = display.tween(objlist[0].rotation,{\r\n            to: {\r\n                x: Math.PI*Math.random(),\r\n                y: Math.PI*Math.random(),\r\n                z: Math.PI*Math.random()\r\n            },\r\n            duration: 500+Math.random()*2000,\r\n            repeat: Infinity,\r\n            yoyo: true,\r\n            delay: 0,\r\n            easing: TWEEN.Easing.Cubic.InOut\r\n        });\r\n        t.onRepeat(function() {\r\n            t.to({\r\n                x: Math.PI*Math.random(),\r\n                y: Math.PI*Math.random(),\r\n                z: Math.PI*Math.random()\r\n            },500+Math.random()*2000);\r\n        });\r\n        var t2 = display.tween(objlist[1].rotation,{\r\n            to: {\r\n                x: Math.PI*Math.random(),\r\n                y: Math.PI*Math.random(),\r\n                z: Math.PI*Math.random()\r\n            },\r\n            duration: 500+Math.random()*2000,\r\n            repeat: Infinity,\r\n            yoyo: true,\r\n            delay: 0,\r\n            easing: TWEEN.Easing.Cubic.InOut\r\n        });\r\n        t2.onRepeat(function() {\r\n            t2.to({\r\n                x: Math.PI*Math.random(),\r\n                y: Math.PI*Math.random(),\r\n                z: Math.PI*Math.random()\r\n            },500+Math.random()*2000);\r\n        });\r\n\t},\r\n\tonUpdate: function(display, data) {\r\n\t\tvar c = null;\r\n        //display.clear(new Color(0x00));\r\n        for (var i=0; i < display.leds.length; i++) {\r\n            display.leds[i].multiplyScalar(0.75);\r\n        }\r\n        //display.clear(new Color(0xFF));\r\n        \r\n        //objlist[0].quaternion.slerp(qb, tweenedValues.percent);\r\n        for (var i=0; i < objlist.length; i++) {\r\n            objlist[i].update();\r\n            objlist[i].draw(display);\r\n        }\r\n\t}\r\n};","publish":true,"script":{}}