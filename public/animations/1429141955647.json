{"name":"Bleeding Rainbows","filename":"1429141955647.js","author":"Ben","code":"// example code, renders a basic rainbow\r\nvar tweenedValues = {\r\n\thue: 0\r\n};\r\n\r\nreturn {\r\n\tinit: function(display,timeline) {\r\n\t\tthis.display = display;\r\n       // debugger;\r\n      \tdisplay.tween(tweenedValues,{\r\n          to: {hue: 256},\r\n          duration: 5000,\r\n          repeat: Infinity,\r\n          yoyo: false,\r\n          delay: 0\r\n        });\r\n        this.initPalette(display);\r\n        this.initPlasma(display);\r\n\t},\r\n\tinitPalette: function(display) {\r\n\t  this.palette = [];\r\n\t  for (var i=0; i < 256; i++) {\r\n\t      var c = new Color();\r\n\t      c.setHSL(i/255, 1.0, 0.5);\r\n\t      this.palette.push(c);\r\n\t  }\r\n\t},\r\n\tinitPlasma: function(display) {\r\n\t   this.plasma = [];\r\n\t   var rnd = 3 + Math.random()*8;\r\n\t   for (var x=0; x < display.cols; x++) {\r\n\t       var row = [];\r\n\t       for (var y=0; y < display.rows; y++) {\r\n\t           \r\n\t           row.push(\r\n\t               Math.round(\r\n\t                    128 + (128 * Math.sin(x / rnd)) +\r\n\t                    128 + (128 * Math.sin(y / (rnd/2))) +\r\n\t                    128 + (128 * Math.sin((x+y) / rnd)) +\r\n\t                    128 + (128 * Math.sin(Math.sqrt(x*x+y*y)) / (rnd/2))\r\n\t           ));\r\n\t       }\r\n\t       this.plasma.push(row);\r\n\t   }\r\n\t},\r\n\tonUpdate: function(display, data) {\r\n\t\tvar c = null;\r\n\r\n        \r\n        for (var x=0; x <= display.cols/2; x++) {\r\n            for (var y=0; y <= display.rows/2; y++) {\r\n                var index = y * display.cols + x;\r\n\t\t\t\t\r\n    \t\t\tc = this.palette[((this.plasma[x][y]) + Math.round(tweenedValues.hue)) % 255];\r\n    \t\t\tdisplay.setColor(index,c);\r\n    \t\t\t\r\n    \t\t    var tmpY = display.rows - y,\r\n    \t\t        tmpX = x;\r\n                index = tmpY * display.cols + tmpX;\r\n                display.setColor(index, c);\r\n                \r\n    \t\t    tmpX = display.cols - x;\r\n                index = tmpY * display.cols + tmpX;\r\n                display.setColor(index, c);\r\n                \r\n    \t\t    tmpY = y;\r\n                index = tmpY * display.cols + tmpX;\r\n                display.setColor(index, c);\r\n\t\t    }\r\n        }\r\n\t}\r\n};","publish":true,"script":{}}