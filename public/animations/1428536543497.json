{"name":"Pulsing Lights","filename":"1428536543497.js","author":"Ben","code":"// example code, renders a basic rainbow\r\nvar tweenedValues = {\r\n\thue: 0,\r\n\tpercentage: 0\r\n};\r\n\r\n// this animation creates 3 virtual lights that bounce around the space\r\n\r\nvar lights = [];\r\n\r\nfunction createLight(c, radius, x, y) {\r\n    lights.push({\r\n        radius: radius,\r\n        color: c,\r\n        attenuation:1,\r\n        x: x,\r\n        y: y,\r\n        epsilon: 0.00001,\r\n        minRadius: radius,\r\n        deltaRadius: Math.random()*10,\r\n        duration: 500+Math.random()*3000,\r\n        delay: Math.random()*8000\r\n    });\r\n}\r\nfunction distance(x,y, a,b) {\r\n    return Math.sqrt(\r\n        ((a-x)*(a-x)) +\r\n        ((b-y)*(b-y))\r\n    );\r\n};\r\n\r\nfunction renderLights(display, lights) {\r\n    // iterate over all pixels\r\n    // calculate how much effect each light should have on the pixel\r\n    // apply colors in sequence to get light effect\r\n    var time = Date.now();\r\n    for (var i=0; i < display.leds.length; i++) {\r\n\t\tvar x = i%display.cols,\r\n\t\t\ty = Math.floor(i/display.cols);\r\n\t\tfor (var k=0; k < lights.length; k++) {\r\n\t\t    var light = lights[k];\r\n\t\t    \r\n\t\t    var dist = distance(light.x, light.y, x, y);\r\n\t\t    \r\n\t\t    if (dist > light.minRadius + light.deltaRadius) {\r\n\t\t        continue;\r\n\t\t    }\r\n\t\t    var percent = 0;\r\n\t\t    var phase = time%(light.duration*2 + light.delay);\r\n\t\t    if (phase <= light.duration) {\r\n\t\t        percent = TWEEN.Easing.Cubic.InOut(phase/light.duration);\r\n\t\t    } else if (phase >= light.duration+light.delay) {\r\n\t\t        percent = TWEEN.Easing.Cubic.InOut(1-((phase-light.delay-light.duration)/light.duration));\r\n\t\t    } else {\r\n\t\t        percent = 1;\r\n\t\t    }\r\n\t\t    \r\n\t\t    var radius = light.minRadius + (light.deltaRadius * percent);\r\n\t\t    \r\n\t\t    var attenuation = 0;\r\n            if (dist < radius) {\r\n                var f = dist / radius;\r\n                attenuation = Math.pow(1-(f*f), 4);\r\n            }\r\n\t\t    var c = light.color.clone();\r\n\t        c.multiplyScalar(attenuation);\r\n\t\t    display.setColor(i, c, 'add');\r\n\t\t}\r\n    }\r\n}\r\nfunction random(min,max) {\r\n    return Math.floor(Math.random()*(max-min)) + min;\r\n}\r\nreturn {\r\n\tinit: function(display,timeline) {\r\n\t\tthis.display = display;\r\n        for (var i=0; i < 20;i++) {\r\n            var h = Math.random();\r\n            var c = new Color();\r\n            c.setHSL(h,1.0,0.5);\r\n            createLight(c, 5 + Math.random()*5, random(0,display.cols),random(0,display.rows));    \r\n            lights[i].xOff = Math.random();\r\n            lights[i].yOff = Math.random();\r\n        }\r\n\t},\r\n\tonUpdate: function(display, data) {\r\n\t    display.clear();\r\n\t\trenderLights(display, lights);\r\n\t}\r\n};","publish":true,"script":{}}